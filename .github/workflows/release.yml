name: Build and Release Packages
on:
  push:
    tags:
      - 'v*'

jobs:
  # Job to build the platform-independent CLI Jar only once
  build-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build CLI Jar
        run: ./gradlew cliJar
      - name: Upload CLI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MangaCombiner-cli
          path: build/libs/manga-combiner-cli-*.jar

  # This job builds the desktop installers for macOS, Windows, and Linux
  build-desktop:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build Desktop Installers
        run: ./gradlew packageDistributionForCurrentOS
      - name: Upload Desktop Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MangaCombiner-${{ matrix.os }}
          path: |
            build/compose/binaries/main/**/*.dmg
            build/compose/binaries/main/**/*.msi
            build/compose/binaries/main/**/*.deb
            build/compose/binaries/main/**/*.rpm

  # This job builds the Android AAB and APK
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Decode Keystore & Create Properties File
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > my-release-key.keystore
          echo "storeFile=../my-release-key.keystore" > keystore.properties
          echo "storePassword=${{ secrets.RELEASE_STORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ secrets.RELEASE_KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ secrets.RELEASE_KEY_PASSWORD }}" >> keystore.properties
      - name: Build Android App Bundle and APK
        run: ./gradlew bundleRelease assembleRelease
      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MangaCombiner-Android
          path: |
            **/build/outputs/bundle/release/*.aab
            **/build/outputs/apk/release/*.apk

  # This job creates the GitHub Release after all builds succeed
  create-release:
    needs: [build-cli, build-desktop, build-android]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Delete existing release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release delete ${{ github.ref_name }} --yes || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/MangaCombiner-cli/*.jar
            artifacts/MangaCombiner-Android/**/*.aab
            artifacts/MangaCombiner-Android/**/*.apk
            artifacts/MangaCombiner-macos-latest/**/*.dmg
            artifacts/MangaCombiner-windows-latest/**/*.msi
            artifacts/MangaCombiner-ubuntu-22.04/**/*.deb
            artifacts/MangaCombiner-ubuntu-22.04/**/*.rpm

