name: Build and Release Packages

on:
  push:
    tags:
      - 'v*'

jobs:
  # This job builds the desktop installers for macOS, Windows, and Linux
  build-desktop:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build Desktop Installers and CLI
        run: ./gradlew packageDistributionForCurrentOS cliJar

      - name: Upload Desktop Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MangaCombiner-${{ matrix.os }}
          path: |
            build/compose/binaries/main/
            build/libs/*.jar

  # This job builds the Android AAB (for the Play Store) and APK (for direct install)
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Decode Keystore & Create Properties File
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > my-release-key.keystore
          echo "storeFile=../my-release-key.keystore" > keystore.properties
          echo "storePassword=${{ secrets.RELEASE_STORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ secrets.RELEASE_KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ secrets.RELEASE_KEY_PASSWORD }}" >> keystore.properties

      - name: Build Android App Bundle and APK
        run: ./gradlew bundleRelease assembleRelease

      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MangaCombiner-Android
          path: |
            build/outputs/bundle/release/*.aab
            build/outputs/apk/release/*.apk

  # This job creates the GitHub Release page automatically after all builds succeed
  create-release:
    needs: [build-desktop, build-android]
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grant permission to create/delete releases
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      # This step deletes a release if it already exists for this tag
      - name: Delete existing release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release delete ${{ github.ref_name }} --yes || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # This uploads all files from the subdirectories inside the 'artifacts' folder.
          files: artifacts/**/*
